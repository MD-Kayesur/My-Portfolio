import { useEffect, useState, useRef } from "react"; //useState: Burst ‡¶á‡¶´‡ßá‡¶ï‡ßç‡¶ü ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§
// useRef: interval ‡¶ß‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶§‡ßá ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Æ‡¶æ‡¶â‡¶∏ ‡¶ö‡ßá‡¶™‡ßá ‡¶∞‡¶æ‡¶ñ‡¶≤‡ßá ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ burst ‡¶π‡ßü‡•§

import { motion, AnimatePresence } from "framer-motion";
import rainbowImage from "../images/0b7fb41a-3019-4644-b657-c8f76a91b6f4.jpeg";

const MouseBurst = () => {
  // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ burst ‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶∞‡¶æ‡¶ñ‡¶õ‡¶ø‡•§ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶¨‡¶æ ‡¶á‡¶´‡ßá‡¶ï‡ßç‡¶ü ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶è‡¶ï‡¶ü‡¶æ object ‚Äî ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá x, y ‡¶™‡¶ú‡¶ø‡¶∂‡¶® ‡¶è‡¶¨‡¶Ç unique id ‡¶•‡¶æ‡¶ï‡ßá‡•§
  const [clicks, setClicks] = useState([]);
  // ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ref ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶õ‡¶ø ‡¶Ø‡¶æ‡¶§‡ßá mousedown ‡¶ß‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶≤‡ßá ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ burst trigger ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§
  const intervalRef = useRef(null);

  // startBurst() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø:

  // ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶â‡¶∏ ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶™‡¶ú‡¶ø‡¶∂‡¶® (x, y) ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡ßá‡•§

  // ‡¶∏‡ßá‡¶á ‡¶™‡¶ú‡¶ø‡¶∂‡¶®‡ßá burst effect trigger ‡¶ï‡¶∞‡¶õ‡ßá‡•§

  // ‡ßß ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶∏‡ßá‡¶ü‡¶ø remove ‡¶ï‡¶∞‡¶õ‡ßá ‡¶Ø‡¶æ‡¶§‡ßá ‡¶™‡ßÅ‡¶∞‡¶®‡ßã ‡¶á‡¶Æ‡ßá‡¶ú ‡¶∞‡ßü‡ßá ‡¶®‡¶æ ‡¶Ø‡¶æ‡ßü‡•§
  const startBurst = (e) => {
    const { clientX, clientY } = e;

    const newClick = {
      id: Date.now() + Math.random(),
      x: clientX,
      y: clientY,
    };

    setClicks((prev) => [...prev, newClick]);

    setTimeout(() => {
      setClicks((prev) => prev.filter((item) => item.id !== newClick.id));
    }, 1000);
  };

  //   ‡¶Æ‡¶æ‡¶â‡¶∏ ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ burst ‡¶π‡ßü, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡ßß‡ß´‡ß¶ms ‡¶™‡¶∞ ‡¶™‡¶∞ ‡¶π‡ßü‡ßá ‡¶ö‡¶≤‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡ßá ‡¶Ø‡¶§‡¶ï‡ßç‡¶∑‡¶£ ‡¶ö‡ßá‡¶™‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü‡•§
  // ‡¶õ‡ßá‡ßú‡ßá ‡¶¶‡¶ø‡¶≤‡ßá clearInterval ‡¶ï‡¶∞‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡ßü‡•§
  // clean-up ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü ‡¶Ø‡¶æ‡¶§‡ßá memory leak ‡¶®‡¶æ ‡¶π‡ßü‡•§

  useEffect(() => {
    const handleMouseDown = (e) => {
      startBurst(e); // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶á ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ burst

      intervalRef.current = setInterval(() => {
        startBurst(e);
      }, 150); // ‡¶™‡ßç‡¶∞‡¶§‡¶ø 150ms-‡¶è burst ‡¶π‡¶¨‡ßá ‡¶Ø‡¶§‡¶ï‡ßç‡¶∑‡¶£ ‡¶ö‡ßá‡¶™‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü
    };

    const handleMouseUp = () => {
      clearInterval(intervalRef.current);
    };

    window.addEventListener("mousedown", handleMouseDown);
    window.addEventListener("mouseup", handleMouseUp);

    return () => {
      window.removeEventListener("mousedown", handleMouseDown);
      window.removeEventListener("mouseup", handleMouseUp);
    };
  }, []);
  // üåà ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¨‡¶æ‡¶∞ burst ‡¶è ‡¶ï‡¶§‡¶ó‡ßÅ‡¶≤‡ßã image ‡¶õ‡ßú‡¶ø‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶∏‡ßá‡¶ü‡¶ø ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‚Äî ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡ßß‡ß¶‡¶ü‡¶ø‡•§
  const particles = 10;

  return (
    <div className="fixed inset-0 z-[9999] pointer-events-none">
      {/* ‡¶è‡¶ï‡¶ü‡¶ø full-screen container ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶á‡¶Æ‡ßá‡¶ú ‡¶ó‡ßÅ‡¶≤‡ßã position ‡¶π‡¶¨‡ßá‡•§
      pointer-events-none ‡¶Æ‡¶æ‡¶®‡ßá ‡¶è‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶¨‡ßç‡¶≤‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá ‡¶®‡¶æ‡•§ */}
      <AnimatePresence>
        {clicks.map((click) =>
          Array.from({ length: particles }).map((_, i) => {
            const angle = (360 / particles) * i;
            const radius = 100;
            const radian = (angle * Math.PI) / 180;

            const dx = Math.cos(radian) * radius;
            const dy = Math.sin(radian) * radius;
            // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶á‡¶Æ‡ßá‡¶ú ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü angle ‡¶è ‡¶õ‡ßú‡¶ø‡ßü‡ßá ‡¶™‡ßú‡¶¨‡ßá‡•§
            // dx, dy ‚Äî x/y ‡¶Ö‡¶ï‡ßç‡¶∑ ‡¶¨‡¶∞‡¶æ‡¶¨‡¶∞ move ‡¶ï‡¶∞‡¶¨‡ßá‡•§
            // ‡¶è‡¶ü‡¶ø radial burst ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá (‡¶ó‡ßã‡¶≤ ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶ö‡¶æ‡¶∞‡¶™‡¶æ‡¶∂‡ßá ‡¶õ‡ßú‡¶ø‡ßü‡ßá ‡¶™‡ßú‡ßá)‡•§
            return (
              <motion.img
                key={`${click.id}-${i}`}
                src={rainbowImage}
                initial={{
                  x: click.x,
                  y: click.y,
                  scale: 0.3,
                  opacity: 1,
                }}
                animate={{
                  x: click.x + dx,
                  y: click.y + dy,
                  scale: 1.2,
                  opacity: 0,
                }}
                exit={{ opacity: 0 }}
                transition={{ duration: 1, ease: "easeOut" }}
                className="absolute w-10 h-10 -translate-x-1/2 -translate-y-1/2 rounded-full"
              />
              // motion.img ‡¶¶‡¶ø‡ßü‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶á‡¶Æ‡ßá‡¶ú animate ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§ 
              // initial: ‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá ‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§ 
              // animate: ‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶Ø‡¶æ‡¶¨‡ßá (burst effect)‡•§ 
              // exit: opacity 0 ‡¶Æ‡¶æ‡¶®‡ßá invisible ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡ßá‡•§ 
              // transition: smooth ease out animation‡•§
            );
          })
        )}
      </AnimatePresence>
    </div>
  );
};

export default MouseBurst;
// Globally Use kora
{/* <StrictMode>
    <MouseBurst></MouseBurst>
    <RouterProvider router={router} />
  </StrictMode>, */}
